[{"title":"PN序列的产生以及相关函数的计算","url":"/myblog/2020/03/18/PN序列的产生以及相关函数的计算/","content":" 1. 求 PN 序列并极化（给定初始序列[1 0 0 0 0 0]），c(n)代表序列第 n 个值，c(0)代表 c(N)\n\n```cpp\nfunction cout=c(L,n)\n    head=[[1 0 0 0 0 1],%[6,1]\n          [1 1 0 0 1 1],%[6,5,2,1]\n          [1 0 0 1 1 1]];%[6,5,4,1]\n    head_L=logical(head(L,:));\n    cc=[1 0 0 0 0 0];\n    c_t=[];\n    N=63;\n    n=mod(n,N);\n    if(n==0)\n        n=n+N;\n    end\n    for i=1:n-1\n       temp=cc(head_L);\n       c_t(1)=mod(sum(temp),2);\n       c_t(2:6)=cc(1:5);\n       cc = c_t;\n    end\n    if(cc(6)>0)\n        cout = 1;\n    else\n        cout = -1;\n    end\n```\n\n2. 求相关函数，Rc1(L1,L2)是指求 L1 抽头和 L2 抽头的互相关函数，L1=L2 则为自相关函数 \n\tL1:[6,1]\n\n\tL2:[6,5,2,1]\n \n\tL3:[6,5,4,1]\n\t\n\n```cpp\nfunction [Tao,RC]=Rc1(L1,L2)\nRc=[];\nRc_T=0;\ntao=-50:50;\nfor(i=-50:50)\n    for t=-31:31\n        Rc_T =Rc_T+c(L1,t)*c(L2,t-i);\n    end\n    Rc(i+51)=Rc_T/63;\n    Rc_T=0;\nend\nTao=tao;\nRC=Rc;\nplot(tao,Rc);\n```\n \n\n 3. 实际计算相关函数\n \n\n```cpp\n%%计算自相关函数\n%[6,1]\n[tao,Rc61]=Rc1(1,1);%Rc1是求相关函数，（1,1）则是[6，1]的自相关函数\n%[6,5,2,1]\n[tao,Rc6521]=Rc1(2,2);\n%%计算互相关函数\n[tao,cross1]=Rc1(1,2);%Rc1是求相关函数，（1,2）则是[6,1]和[6,5,2,1]的互相关函数\n[tao,cross2]=Rc1(2,3);\nfigure(1);\nsubplot(1,3,1);plot(tao,Rc61);title(\"[6,1]的自相关函数\");xlabel(\"τ\");ylabel(\"Rc(τ)\");\nsubplot(1,3,2);plot(tao,Rc6521);title(\"[6,5,2,1]的自相关函数\");xlabel(\"τ\");ylabel(\"Rc(τ)\");\nsubplot(1,3,3);plot(tao,cross1*63);axis([-60 60 -20 20]);title(\"[6,1]和[6,5,2,1]的互相关函数\");xlabel(\"τ\");ylabel(\"Rc(τ)\");\nfigure(2);\nplot(tao,cross2*63);axis([-60 60 -20 20]);title(\"[6,5,4,1]和[6,5,2,1]的互相关函数\");xlabel(\"τ\");ylabel(\"Rc(τ)\");\ndisplay(max(abs(cross1)*63));\ndisplay(max(abs(cross2)*63));\n```\n输出结果：\n![figure1](https://img-blog.csdnimg.cn/20200318143708855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTY3MjgyOA==,size_16,color_FFFFFF,t_70)\n![figure2](https://img-blog.csdnimg.cn/20200318143748900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTY3MjgyOA==,size_16,color_FFFFFF,t_70)\n这是数字通信课程的一道编程作业题，这里求相关函数采用的是循环，还有很大优化空间，要注意的是序列周期延拓各个下标的值怎么映射到原始序列，这其实就是一个求模的过程，这里互相关函数figure2最大值为15，figure1最大值为17，figure2中两个抽头产生的PN序列可用来产生gold序列，他们的互相关函数不会超过\n$$\n2^{(n+1)/2}+1\\,（n为奇数）\n$$\n$$\n2^{(n+2)/2}+1\\,（n为偶数）\n$$\n\n"},{"title":"win10+Ubuntu16.04+Quadro P600双系统安装以及独显驱动安装","url":"/myblog/2020/02/24/win10+Ubuntu16.04+Quadro P600双系统安装以及独显驱动安装/","content":"终于装完了双系统并完成了显卡配置这一步。安装双系统可以说是巨坑无数，这里从头记录一下\n\n 1. 烧录镜像\n 首先是制作镜像，在网上下载了Ubuntu16.04版本的iso，18.04也是可以的，然后就是烧录程序，这里需要准备一个空的U盘，烧录工具用的是UItraISO，安装好后打开烧录工具，选择镜像，注意此镜像不是放在U盘里面的。然后选择项目里面的硬盘，然后选择U盘，如果你插了其他的U盘一定要注意看看是否选对，然后选择格式化，最好选择fat-32格式，然后写入，很快，系统就写入成功了\n 2. 安装系统\n安装系统之前需要有一个硬盘空间分配给Ubuntu，右键开始图标，磁盘管理，选择较为空闲的磁盘右键，压缩卷，给50-100G之间都行，然后该分区显示未分配就表明可以了\n\t接下来就要进入正题了，重启电脑进入bios，选择启动项为U盘启动，启动后选择安装Ubuntu，这里我遇到了第一个问题，卡在了图标logo界面，通过[这篇文章](https://www.cnblogs.com/long5683/p/11178149.html)解决了问题，这个是显卡问题，在后面还会困扰你。跟着这篇博客我成功进入了系统安装界面，里面注意的是要安装English-US版本，中文的会出问题，这也是学长前辈给我说的，所以我没有踩这颗雷，后面还有一个要注意的就是分区选择，将free space中大小为你之前分配的空间大小的分区挂载到‘/’下面，不要选错了，还有一块free space是给Windows系统留的，错了可能就会导致你的Windows“嘿嘿”，剩下的就很顺利了，成功进入到Ubuntu系统，这里每次开机都会自动进入Windows，所以如果你想进Ubuntu，就需要选择启动项为Ubuntu。\n\t\n 3. 显卡驱动\n这里是最让人头疼的，因为Ubuntu自动选择集显，所以我插上外接屏没有任何反应，这里还有一个小插曲，每次插入显示屏都会直接崩溃，其实这个就是显卡的问题，因为我没有走完上面说的有关显卡那个blog，导致了这个问题，改了那3个地方插入显示频就不崩溃了，只是没有反应。\n\t接下来就开始了漫长的探索之旅，点击屏幕右上角的设置图标选择about this computer就可以看到它用的哪张图形卡，我的是NVIDIA的专业图形卡Quadro P600，这里它并没有使用，所以自然无法拓展屏，更不用说后面深度学习使用显卡了。一番摸爬滚打可算是把显卡弄好了，接下来讲讲这里的步骤，注意我的配置是Quadro P600，其他的显卡未做尝试\n\t首先，讲讲我遇到的方法，第一个是自己下载驱动，也就是到官网上下载相应显卡的最新驱动，一个.run文件，然后安装。这个方法我失败了。另一种放大是ppa安装，这个个人认为更靠谱，毕竟这是NVIDIA在Linux上设立的一个驱动安装源，这个遇到的问题是速度慢。接下来讲第二种方法。\n\t在装上Ubuntu的第一时间，我就对apt更换了阿里源，这个网上搜搜就搞定了，有了源，很多软件就能飞速下载了，然后加入ppa源：\n\t\n\n```bash\n\tsudo add-apt-repository ppa:graphics-drivers/ppa\n\tsudo apt-get update\n```\n运行第二条命令的时候就开始龟速了，这暗示着这个源离你千里之外，没错，这个源服务器ppa.launchpad.net远在英国，而且好像没有镜像，这就很坑了。加入ppa源后就可以安装驱动了，安装驱动之前，你需要知道你的显卡需要哪一款驱动：\n运行之后可以看到系统推荐的NVIDIA版本，就是有`recommended`字样的，我的是`nvidia-430`，接下来安装驱动\n\t\n\n```bash\nsudo apt-get install nvidia-430\n```\n\n在这里，我下载速度变得奇慢无比，所以我尝试了翻墙、换其他安装方法等，都失败了，解决方法如下：\n参考了[这篇博客](https://learnku.com/articles/33436#ecff77)\n运行3个命令\n\t\n\n```bash\n\tsudo apt-get install axel\n\tsudo axel -o /usr/bin/apt-fast http://www.mattparnell.com/linux/apt-\tfast/apt-fast.sh\n\tsudo chmod +x /usr/bin/apt-fast\n```\n\n死在了第二条命令上，这里我直接打开了那个网址，可以直接看到脚本，所以我在`/usr/bin`目录下创建了文件`apt-fast`，然后将脚本内容复制进去，第三条命令是给这个脚本权限，然后执行\n\t\n\n```bash\nsudo apt-fast install nvidia-430\n```\n\n成功，且速度还看得过去，几十KB/s，但也下了几个小时。。。装完后可以打开`software&update`这个系统软件，选择`additional drivers`，如果选择的是你安装的版本，就表明成功了，也可以在这里安装，本质差不多。然后重启电脑，开始无限登录，参考了[这篇博客](https://blog.csdn.net/kingthon/article/details/81151843)，更改后成功进入，查看电脑信息发现用的正式我的独显，于是迫不及待地插上拓展屏，果然，成功了！显示屏的设置可以在NVIDIA的软件中设置，就是`NVIDIA X Server Settings`，还有就是系统设置里面的`display`里面可以设置，今天就记录到这里吧，其他问题可以留言一起探讨。\n\n"}]